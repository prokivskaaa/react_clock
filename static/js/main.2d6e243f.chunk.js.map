{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["getFormattedDate","Date","toUTCString","slice","Clock","state","today","dateTimerId","window","setInterval","date","setState","console","info","clearInterval","this","clockName","props","className","Component","getRandomName","value","now","toString","App","hasClock","nameTimerId","handleClick","event","preventDefault","isLeftClick","type","document","addEventListener","_","prevState","message","debug","removeEventListener","ReactDOM","render","getElementById"],"mappings":"oNAEA,SAASA,IAGP,OAFa,IAAIC,MAELC,cAAcC,OAAO,IAAK,GAWjC,IAAMC,EAAb,4MACEC,MAAyB,CACvBC,MAAON,KAFX,EAKEO,YAAcC,OAAOC,aAAY,WAC/B,IAAMC,EAAOV,IAEb,EAAKW,SAAS,CAAEL,MAAOI,IAGvBE,QAAQC,KAAKH,KACZ,KAZL,0DAcE,WACEF,OAAOM,cAAcC,KAAKR,eAf9B,oBAkBE,WACE,IAAQS,EAAcD,KAAKE,MAAnBD,UACAV,EAAUS,KAAKV,MAAfC,MAER,OACE,sBAAKY,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SAAiCF,IAEhC,YAED,sBAAME,UAAU,cAAhB,SAA+BZ,WA5BvC,GAA2Ba,aCZ3B,SAASC,IACP,IAAMC,EAAQpB,KAAKqB,MAAMC,WAAWpB,OAAO,GAE3C,MAAM,SAAN,OAAgBkB,GAQX,IAAMG,EAAb,4MACEnB,MAAyB,CACvBW,UAAW,UACXS,UAAU,GAHd,EAMEC,YAAclB,OAAOC,aAAY,WAC/B,EAAKE,UAAS,SAACN,GACb,OAAO,2BACFA,GADL,IAEEW,UAAWI,WAGd,MAbL,EAsCEO,YAAc,SAACC,GACbA,EAAMC,iBAEN,IAAMC,EAA6B,UAAfF,EAAMG,KAE1B,EAAKpB,UAAS,SAACN,GAAD,mBAAC,eACVA,GADS,IAEZoB,SAAUK,QA7ChB,uDAeE,WACEE,SAASC,iBAAiB,cAAelB,KAAKY,aAC9CK,SAASC,iBAAiB,QAASlB,KAAKY,eAjB5C,gCAoBE,SAAmBO,EAAYC,GAG7B,GAF2BA,EAAUnB,YAAcD,KAAKV,MAAMW,WAEpCD,KAAKV,MAAMoB,SAAU,CAC7C,IAAMW,EAAO,uBAAmBD,EAAUnB,UAA7B,eAA6CD,KAAKV,MAAMW,WAGrEJ,QAAQyB,MAAMD,MA3BpB,kCA+BE,WACE5B,OAAOM,cAAcC,KAAKW,aAE1BM,SAASM,oBAAoB,cAAevB,KAAKY,aACjDK,SAASM,oBAAoB,QAASvB,KAAKY,eAnC/C,oBAiDE,WACE,MAAgCZ,KAAKV,MAA7BoB,EAAR,EAAQA,SAAUT,EAAlB,EAAkBA,UAElB,OACE,sBAAKE,UAAU,MAAf,UACE,6CACCO,GAAY,cAAC,EAAD,CAAOT,UAAWA,WAvDvC,GAAyBG,aCZzBoB,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.2d6e243f.chunk.js","sourcesContent":["import { Component } from 'react';\n\nfunction getFormattedDate(): string {\n  const date = new Date();\n\n  return date.toUTCString().slice(-12, -4);\n}\n\ninterface State {\n  today: string;\n}\n\ninterface Props {\n  clockName: string;\n}\n\nexport class Clock extends Component<Props> {\n  state: Readonly<State> = {\n    today: getFormattedDate(),\n  };\n\n  dateTimerId = window.setInterval(() => {\n    const date = getFormattedDate();\n\n    this.setState({ today: date });\n\n    // eslint-disable-next-line no-console\n    console.info(date);\n  }, 1000);\n\n  componentWillUnmount() {\n    window.clearInterval(this.dateTimerId);\n  }\n\n  render() {\n    const { clockName } = this.props;\n    const { today } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">{clockName}</strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">{today}</span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ninterface State {\n  clockName: string;\n  hasClock: boolean;\n}\n\nexport class App extends Component {\n  state: Readonly<State> = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  nameTimerId = window.setInterval(() => {\n    this.setState((state: State): State => {\n      return {\n        ...state,\n        clockName: getRandomName(),\n      };\n    });\n  }, 3300);\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', this.handleClick);\n    document.addEventListener('click', this.handleClick);\n  }\n\n  componentDidUpdate(_: unknown, prevState: State) {\n    const isClockNameUpdated = prevState.clockName !== this.state.clockName;\n\n    if (isClockNameUpdated && this.state.hasClock) {\n      const message = `Renamed from ${prevState.clockName} to ${this.state.clockName}`;\n\n      // eslint-disable-next-line no-console\n      console.debug(message);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.nameTimerId);\n\n    document.removeEventListener('contextmenu', this.handleClick);\n    document.removeEventListener('click', this.handleClick);\n  }\n\n  handleClick = (event: Event) => {\n    event.preventDefault();\n\n    const isLeftClick = event.type === 'click';\n\n    this.setState((state: State) => ({\n      ...state,\n      hasClock: isLeftClick,\n    }));\n  };\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && <Clock clockName={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}